package com.eeit109team6.servletmember;

import java.io.IOException;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.hibernate.Session;
import org.hibernate.SessionFactory;

import com.eeit109team6.memberDao.HibernateUtil;
import com.eeit109team6.memberDao.IMemberDao;
import com.eeit109team6.memberDao.Member;
import com.eeit109team6.memberDao.MemberDaoFactoery;

@WebServlet("/LoginMember")
public class LoginMember extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private SessionFactory sessionFactory;
	private Session hbSession;

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		HttpSession session = request.getSession();
		System.out.println("login" + request.getParameter("login"));
		System.out.println("fergetpwd" + request.getParameter("fergetpwd"));
		if (request.getParameter("fergetpwd") != null) {
			RequestDispatcher rd = request.getRequestDispatcher("/member/forgetPWD.html");
			rd.forward(request, response);
			return;
		}
		session.removeAttribute("AccountEmptyError");
		session.removeAttribute("PasswordEmptyError");
		request.setCharacterEncoding("UTF-8");
		response.setContentType("text/html;charset=UTF-8");
		String account = request.getParameter("account");
		String password = request.getParameter("password");

		

		if (account == null || account.trim().length() == 0) {
			session.setAttribute("AccountEmptyError", "帳號欄必須輸入");
	
		}
		// 如果 password 欄位為空白，放一個錯誤訊息到 errorMsgMap 之內
		if (password == null || password.trim().length() == 0) {
			session.setAttribute("PasswordEmptyError", "密碼欄必須輸入");
		}


		if (session.getAttribute("PasswordEmptyError") !=null && session.getAttribute("AccountEmptyError") !=null) {
			System.out.println("session.getAttribute(\"PasswordEmptyError\")");
			response.sendRedirect(getServletContext().getContextPath()+"/member/LoginMember.jsp");

			return;
		}

		String key = "MickeyKittyLouis";
		String password_AES = CipherUtils.encryptString(key, password).replaceAll("[\\pP\\p{Punct}]", "").replace(" ",
				"");

		Member mem = new Member();
		mem.setAccount(account);
		mem.setPassword(password_AES);
		IMemberDao MEMDao = null;

		sessionFactory = HibernateUtil.getSessionfactory();

		try {
			MEMDao = MemberDaoFactoery.createMember(sessionFactory);

			Member member = MEMDao.login(mem);

			System.out.println("member != null  =  " + (member != null));
			if (member != null) {
				session.setAttribute("username", member.getUsername());
				session.setAttribute("token", member.getToken());
				session.setAttribute("account", member.getAccount());
				session.setAttribute("member_id", member.getMember_id());
				response.getWriter().write("<script>alert('歡迎光臨');</script>");

				request.setAttribute("msg", "歡迎光臨");
				RequestDispatcher rd = request.getRequestDispatcher("member/jump.jsp");
				rd.forward(request, response);
			} else {

				response.getWriter().write("<script>alert('帳號或密碼錯誤，或者未開通');history.go(-1);</script>");
			}
		} catch (SQLException e) {

			e.printStackTrace();
		}

	}
}
